// Generated from src/java/painless/Painless.g4 by ANTLR 4.5
package painless;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PainlessLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, LBRACK=2, RBRACK=3, LBRACE=4, RBRACE=5, LP=6, RP=7, ASSIGN=8, AADD=9, 
		ASUB=10, AMUL=11, ADIV=12, AREM=13, AAND=14, AXOR=15, AOR=16, ALSH=17, 
		ARSH=18, AUSH=19, DOT=20, COMMA=21, SEMICOLON=22, IF=23, ELSE=24, WHILE=25, 
		DO=26, FOR=27, CONTINUE=28, BREAK=29, RETURN=30, BOOLNOT=31, BWNOT=32, 
		MUL=33, DIV=34, REM=35, ADD=36, SUB=37, LSH=38, RSH=39, USH=40, LT=41, 
		LTE=42, GT=43, GTE=44, EQ=45, NE=46, BWAND=47, BWXOR=48, BWOR=49, BOOLAND=50, 
		BOOLOR=51, COND=52, COLON=53, INCR=54, DECR=55, OCTAL=56, HEX=57, INTEGER=58, 
		DECIMAL=59, STRING=60, CHAR=61, TRUE=62, FALSE=63, NULL=64, VOID=65, ID=66;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"WS", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "LP", "RP", "ASSIGN", "AADD", 
		"ASUB", "AMUL", "ADIV", "AREM", "AAND", "AXOR", "AOR", "ALSH", "ARSH", 
		"AUSH", "DOT", "COMMA", "SEMICOLON", "IF", "ELSE", "WHILE", "DO", "FOR", 
		"CONTINUE", "BREAK", "RETURN", "BOOLNOT", "BWNOT", "MUL", "DIV", "REM", 
		"ADD", "SUB", "LSH", "RSH", "USH", "LT", "LTE", "GT", "GTE", "EQ", "NE", 
		"BWAND", "BWXOR", "BWOR", "BOOLAND", "BOOLOR", "COND", "COLON", "INCR", 
		"DECR", "OCTAL", "HEX", "INTEGER", "DECIMAL", "STRING", "CHAR", "TRUE", 
		"FALSE", "NULL", "VOID", "ID"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, "'{'", "'}'", "'['", "']'", "'('", "')'", "'='", "'+='", "'-='", 
		"'*='", "'/='", "'%='", "'&='", "'^='", "'|='", "'<<='", "'>>='", "'>>>='", 
		"'.'", "','", "';'", "'if'", "'else'", "'while'", "'do'", "'for'", "'continue'", 
		"'break'", "'return'", "'!'", "'~'", "'*'", "'/'", "'%'", "'+'", "'-'", 
		"'<<'", "'>>'", "'>>>'", "'<'", "'<='", "'>'", "'>='", "'=='", "'!='", 
		"'&'", "'^'", "'|'", "'&&'", "'||'", "'?'", "':'", "'++'", "'--'", null, 
		null, null, null, null, null, "'true'", "'false'", "'null'", "'void'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "WS", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "LP", "RP", "ASSIGN", 
		"AADD", "ASUB", "AMUL", "ADIV", "AREM", "AAND", "AXOR", "AOR", "ALSH", 
		"ARSH", "AUSH", "DOT", "COMMA", "SEMICOLON", "IF", "ELSE", "WHILE", "DO", 
		"FOR", "CONTINUE", "BREAK", "RETURN", "BOOLNOT", "BWNOT", "MUL", "DIV", 
		"REM", "ADD", "SUB", "LSH", "RSH", "USH", "LT", "LTE", "GT", "GTE", "EQ", 
		"NE", "BWAND", "BWXOR", "BWOR", "BOOLAND", "BOOLOR", "COND", "COLON", 
		"INCR", "DECR", "OCTAL", "HEX", "INTEGER", "DECIMAL", "STRING", "CHAR", 
		"TRUE", "FALSE", "NULL", "VOID", "ID"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PainlessLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Painless.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2D\u01a6\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\3\2\6\2\u0089\n\2\r\2\16\2\u008a"+
		"\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3"+
		"\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30"+
		"\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33"+
		"\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3"+
		" \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)"+
		"\3)\3*\3*\3+\3+\3+\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61"+
		"\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\3\67\38\38\38\39\39\69\u0133\n9\r9\169\u0134\39\59\u0138\n9\3:\3:\3:"+
		"\6:\u013d\n:\r:\16:\u013e\3:\5:\u0142\n:\3;\3;\3;\7;\u0147\n;\f;\16;\u014a"+
		"\13;\5;\u014c\n;\3;\5;\u014f\n;\3<\3<\3<\7<\u0154\n<\f<\16<\u0157\13<"+
		"\5<\u0159\n<\3<\3<\7<\u015d\n<\f<\16<\u0160\13<\5<\u0162\n<\3<\3<\6<\u0166"+
		"\n<\r<\16<\u0167\5<\u016a\n<\3<\3<\5<\u016e\n<\3<\6<\u0171\n<\r<\16<\u0172"+
		"\5<\u0175\n<\3<\5<\u0178\n<\3=\3=\3=\3=\3=\3=\7=\u0180\n=\f=\16=\u0183"+
		"\13=\3=\3=\3>\3>\3>\3>\3?\3?\3?\3?\3?\3@\3@\3@\3@\3@\3@\3A\3A\3A\3A\3"+
		"A\3B\3B\3B\3B\3B\3C\3C\7C\u01a2\nC\fC\16C\u01a5\13C\3\u0181\2D\3\3\5\4"+
		"\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C"+
		"#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w"+
		"=y>{?}@\177A\u0081B\u0083C\u0085D\3\2\17\5\2\13\f\17\17\"\"\3\2\629\4"+
		"\2NNnn\4\2ZZzz\5\2\62;CHch\3\2\63;\3\2\62;\4\2GGgg\4\2--//\4\2HHhh\4\2"+
		"$$^^\5\2C\\aac|\6\2\62;C\\aac|\u01bb\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2"+
		"\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23"+
		"\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2"+
		"\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2"+
		"\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3"+
		"\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2"+
		"\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2"+
		"\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2["+
		"\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2"+
		"\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2"+
		"\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2"+
		"\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\3\u0088\3\2\2\2\5\u008e"+
		"\3\2\2\2\7\u0090\3\2\2\2\t\u0092\3\2\2\2\13\u0094\3\2\2\2\r\u0096\3\2"+
		"\2\2\17\u0098\3\2\2\2\21\u009a\3\2\2\2\23\u009c\3\2\2\2\25\u009f\3\2\2"+
		"\2\27\u00a2\3\2\2\2\31\u00a5\3\2\2\2\33\u00a8\3\2\2\2\35\u00ab\3\2\2\2"+
		"\37\u00ae\3\2\2\2!\u00b1\3\2\2\2#\u00b4\3\2\2\2%\u00b8\3\2\2\2\'\u00bc"+
		"\3\2\2\2)\u00c1\3\2\2\2+\u00c3\3\2\2\2-\u00c5\3\2\2\2/\u00c7\3\2\2\2\61"+
		"\u00ca\3\2\2\2\63\u00cf\3\2\2\2\65\u00d5\3\2\2\2\67\u00d8\3\2\2\29\u00dc"+
		"\3\2\2\2;\u00e5\3\2\2\2=\u00eb\3\2\2\2?\u00f2\3\2\2\2A\u00f4\3\2\2\2C"+
		"\u00f6\3\2\2\2E\u00f8\3\2\2\2G\u00fa\3\2\2\2I\u00fc\3\2\2\2K\u00fe\3\2"+
		"\2\2M\u0100\3\2\2\2O\u0103\3\2\2\2Q\u0106\3\2\2\2S\u010a\3\2\2\2U\u010c"+
		"\3\2\2\2W\u010f\3\2\2\2Y\u0111\3\2\2\2[\u0114\3\2\2\2]\u0117\3\2\2\2_"+
		"\u011a\3\2\2\2a\u011c\3\2\2\2c\u011e\3\2\2\2e\u0120\3\2\2\2g\u0123\3\2"+
		"\2\2i\u0126\3\2\2\2k\u0128\3\2\2\2m\u012a\3\2\2\2o\u012d\3\2\2\2q\u0130"+
		"\3\2\2\2s\u0139\3\2\2\2u\u014b\3\2\2\2w\u0169\3\2\2\2y\u0179\3\2\2\2{"+
		"\u0186\3\2\2\2}\u018a\3\2\2\2\177\u018f\3\2\2\2\u0081\u0195\3\2\2\2\u0083"+
		"\u019a\3\2\2\2\u0085\u019f\3\2\2\2\u0087\u0089\t\2\2\2\u0088\u0087\3\2"+
		"\2\2\u0089\u008a\3\2\2\2\u008a\u0088\3\2\2\2\u008a\u008b\3\2\2\2\u008b"+
		"\u008c\3\2\2\2\u008c\u008d\b\2\2\2\u008d\4\3\2\2\2\u008e\u008f\7}\2\2"+
		"\u008f\6\3\2\2\2\u0090\u0091\7\177\2\2\u0091\b\3\2\2\2\u0092\u0093\7]"+
		"\2\2\u0093\n\3\2\2\2\u0094\u0095\7_\2\2\u0095\f\3\2\2\2\u0096\u0097\7"+
		"*\2\2\u0097\16\3\2\2\2\u0098\u0099\7+\2\2\u0099\20\3\2\2\2\u009a\u009b"+
		"\7?\2\2\u009b\22\3\2\2\2\u009c\u009d\7-\2\2\u009d\u009e\7?\2\2\u009e\24"+
		"\3\2\2\2\u009f\u00a0\7/\2\2\u00a0\u00a1\7?\2\2\u00a1\26\3\2\2\2\u00a2"+
		"\u00a3\7,\2\2\u00a3\u00a4\7?\2\2\u00a4\30\3\2\2\2\u00a5\u00a6\7\61\2\2"+
		"\u00a6\u00a7\7?\2\2\u00a7\32\3\2\2\2\u00a8\u00a9\7\'\2\2\u00a9\u00aa\7"+
		"?\2\2\u00aa\34\3\2\2\2\u00ab\u00ac\7(\2\2\u00ac\u00ad\7?\2\2\u00ad\36"+
		"\3\2\2\2\u00ae\u00af\7`\2\2\u00af\u00b0\7?\2\2\u00b0 \3\2\2\2\u00b1\u00b2"+
		"\7~\2\2\u00b2\u00b3\7?\2\2\u00b3\"\3\2\2\2\u00b4\u00b5\7>\2\2\u00b5\u00b6"+
		"\7>\2\2\u00b6\u00b7\7?\2\2\u00b7$\3\2\2\2\u00b8\u00b9\7@\2\2\u00b9\u00ba"+
		"\7@\2\2\u00ba\u00bb\7?\2\2\u00bb&\3\2\2\2\u00bc\u00bd\7@\2\2\u00bd\u00be"+
		"\7@\2\2\u00be\u00bf\7@\2\2\u00bf\u00c0\7?\2\2\u00c0(\3\2\2\2\u00c1\u00c2"+
		"\7\60\2\2\u00c2*\3\2\2\2\u00c3\u00c4\7.\2\2\u00c4,\3\2\2\2\u00c5\u00c6"+
		"\7=\2\2\u00c6.\3\2\2\2\u00c7\u00c8\7k\2\2\u00c8\u00c9\7h\2\2\u00c9\60"+
		"\3\2\2\2\u00ca\u00cb\7g\2\2\u00cb\u00cc\7n\2\2\u00cc\u00cd\7u\2\2\u00cd"+
		"\u00ce\7g\2\2\u00ce\62\3\2\2\2\u00cf\u00d0\7y\2\2\u00d0\u00d1\7j\2\2\u00d1"+
		"\u00d2\7k\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4\7g\2\2\u00d4\64\3\2\2\2\u00d5"+
		"\u00d6\7f\2\2\u00d6\u00d7\7q\2\2\u00d7\66\3\2\2\2\u00d8\u00d9\7h\2\2\u00d9"+
		"\u00da\7q\2\2\u00da\u00db\7t\2\2\u00db8\3\2\2\2\u00dc\u00dd\7e\2\2\u00dd"+
		"\u00de\7q\2\2\u00de\u00df\7p\2\2\u00df\u00e0\7v\2\2\u00e0\u00e1\7k\2\2"+
		"\u00e1\u00e2\7p\2\2\u00e2\u00e3\7w\2\2\u00e3\u00e4\7g\2\2\u00e4:\3\2\2"+
		"\2\u00e5\u00e6\7d\2\2\u00e6\u00e7\7t\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9"+
		"\7c\2\2\u00e9\u00ea\7m\2\2\u00ea<\3\2\2\2\u00eb\u00ec\7t\2\2\u00ec\u00ed"+
		"\7g\2\2\u00ed\u00ee\7v\2\2\u00ee\u00ef\7w\2\2\u00ef\u00f0\7t\2\2\u00f0"+
		"\u00f1\7p\2\2\u00f1>\3\2\2\2\u00f2\u00f3\7#\2\2\u00f3@\3\2\2\2\u00f4\u00f5"+
		"\7\u0080\2\2\u00f5B\3\2\2\2\u00f6\u00f7\7,\2\2\u00f7D\3\2\2\2\u00f8\u00f9"+
		"\7\61\2\2\u00f9F\3\2\2\2\u00fa\u00fb\7\'\2\2\u00fbH\3\2\2\2\u00fc\u00fd"+
		"\7-\2\2\u00fdJ\3\2\2\2\u00fe\u00ff\7/\2\2\u00ffL\3\2\2\2\u0100\u0101\7"+
		">\2\2\u0101\u0102\7>\2\2\u0102N\3\2\2\2\u0103\u0104\7@\2\2\u0104\u0105"+
		"\7@\2\2\u0105P\3\2\2\2\u0106\u0107\7@\2\2\u0107\u0108\7@\2\2\u0108\u0109"+
		"\7@\2\2\u0109R\3\2\2\2\u010a\u010b\7>\2\2\u010bT\3\2\2\2\u010c\u010d\7"+
		">\2\2\u010d\u010e\7?\2\2\u010eV\3\2\2\2\u010f\u0110\7@\2\2\u0110X\3\2"+
		"\2\2\u0111\u0112\7@\2\2\u0112\u0113\7?\2\2\u0113Z\3\2\2\2\u0114\u0115"+
		"\7?\2\2\u0115\u0116\7?\2\2\u0116\\\3\2\2\2\u0117\u0118\7#\2\2\u0118\u0119"+
		"\7?\2\2\u0119^\3\2\2\2\u011a\u011b\7(\2\2\u011b`\3\2\2\2\u011c\u011d\7"+
		"`\2\2\u011db\3\2\2\2\u011e\u011f\7~\2\2\u011fd\3\2\2\2\u0120\u0121\7("+
		"\2\2\u0121\u0122\7(\2\2\u0122f\3\2\2\2\u0123\u0124\7~\2\2\u0124\u0125"+
		"\7~\2\2\u0125h\3\2\2\2\u0126\u0127\7A\2\2\u0127j\3\2\2\2\u0128\u0129\7"+
		"<\2\2\u0129l\3\2\2\2\u012a\u012b\7-\2\2\u012b\u012c\7-\2\2\u012cn\3\2"+
		"\2\2\u012d\u012e\7/\2\2\u012e\u012f\7/\2\2\u012fp\3\2\2\2\u0130\u0132"+
		"\7\62\2\2\u0131\u0133\t\3\2\2\u0132\u0131\3\2\2\2\u0133\u0134\3\2\2\2"+
		"\u0134\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135\u0137\3\2\2\2\u0136\u0138"+
		"\t\4\2\2\u0137\u0136\3\2\2\2\u0137\u0138\3\2\2\2\u0138r\3\2\2\2\u0139"+
		"\u013a\7\62\2\2\u013a\u013c\t\5\2\2\u013b\u013d\t\6\2\2\u013c\u013b\3"+
		"\2\2\2\u013d\u013e\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f"+
		"\u0141\3\2\2\2\u0140\u0142\t\4\2\2\u0141\u0140\3\2\2\2\u0141\u0142\3\2"+
		"\2\2\u0142t\3\2\2\2\u0143\u014c\7\62\2\2\u0144\u0148\t\7\2\2\u0145\u0147"+
		"\t\b\2\2\u0146\u0145\3\2\2\2\u0147\u014a\3\2\2\2\u0148\u0146\3\2\2\2\u0148"+
		"\u0149\3\2\2\2\u0149\u014c\3\2\2\2\u014a\u0148\3\2\2\2\u014b\u0143\3\2"+
		"\2\2\u014b\u0144\3\2\2\2\u014c\u014e\3\2\2\2\u014d\u014f\t\4\2\2\u014e"+
		"\u014d\3\2\2\2\u014e\u014f\3\2\2\2\u014fv\3\2\2\2\u0150\u0159\7\62\2\2"+
		"\u0151\u0155\t\7\2\2\u0152\u0154\t\b\2\2\u0153\u0152\3\2\2\2\u0154\u0157"+
		"\3\2\2\2\u0155\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0159\3\2\2\2\u0157"+
		"\u0155\3\2\2\2\u0158\u0150\3\2\2\2\u0158\u0151\3\2\2\2\u0159\u0161\3\2"+
		"\2\2\u015a\u015e\7\60\2\2\u015b\u015d\t\b\2\2\u015c\u015b\3\2\2\2\u015d"+
		"\u0160\3\2\2\2\u015e\u015c\3\2\2\2\u015e\u015f\3\2\2\2\u015f\u0162\3\2"+
		"\2\2\u0160\u015e\3\2\2\2\u0161\u015a\3\2\2\2\u0161\u0162\3\2\2\2\u0162"+
		"\u016a\3\2\2\2\u0163\u0165\7\60\2\2\u0164\u0166\t\b\2\2\u0165\u0164\3"+
		"\2\2\2\u0166\u0167\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168"+
		"\u016a\3\2\2\2\u0169\u0158\3\2\2\2\u0169\u0163\3\2\2\2\u016a\u0174\3\2"+
		"\2\2\u016b\u016d\t\t\2\2\u016c\u016e\t\n\2\2\u016d\u016c\3\2\2\2\u016d"+
		"\u016e\3\2\2\2\u016e\u0170\3\2\2\2\u016f\u0171\t\b\2\2\u0170\u016f\3\2"+
		"\2\2\u0171\u0172\3\2\2\2\u0172\u0170\3\2\2\2\u0172\u0173\3\2\2\2\u0173"+
		"\u0175\3\2\2\2\u0174\u016b\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0177\3\2"+
		"\2\2\u0176\u0178\t\13\2\2\u0177\u0176\3\2\2\2\u0177\u0178\3\2\2\2\u0178"+
		"x\3\2\2\2\u0179\u0181\7$\2\2\u017a\u017b\7^\2\2\u017b\u0180\7$\2\2\u017c"+
		"\u017d\7^\2\2\u017d\u0180\7^\2\2\u017e\u0180\n\f\2\2\u017f\u017a\3\2\2"+
		"\2\u017f\u017c\3\2\2\2\u017f\u017e\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u0182"+
		"\3\2\2\2\u0181\u017f\3\2\2\2\u0182\u0184\3\2\2\2\u0183\u0181\3\2\2\2\u0184"+
		"\u0185\7$\2\2\u0185z\3\2\2\2\u0186\u0187\7)\2\2\u0187\u0188\13\2\2\2\u0188"+
		"\u0189\7)\2\2\u0189|\3\2\2\2\u018a\u018b\7v\2\2\u018b\u018c\7t\2\2\u018c"+
		"\u018d\7w\2\2\u018d\u018e\7g\2\2\u018e~\3\2\2\2\u018f\u0190\7h\2\2\u0190"+
		"\u0191\7c\2\2\u0191\u0192\7n\2\2\u0192\u0193\7u\2\2\u0193\u0194\7g\2\2"+
		"\u0194\u0080\3\2\2\2\u0195\u0196\7p\2\2\u0196\u0197\7w\2\2\u0197\u0198"+
		"\7n\2\2\u0198\u0199\7n\2\2\u0199\u0082\3\2\2\2\u019a\u019b\7x\2\2\u019b"+
		"\u019c\7q\2\2\u019c\u019d\7k\2\2\u019d\u019e\7f\2\2\u019e\u0084\3\2\2"+
		"\2\u019f\u01a3\t\r\2\2\u01a0\u01a2\t\16\2\2\u01a1\u01a0\3\2\2\2\u01a2"+
		"\u01a5\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u0086\3\2"+
		"\2\2\u01a5\u01a3\3\2\2\2\30\2\u008a\u0134\u0137\u013e\u0141\u0148\u014b"+
		"\u014e\u0155\u0158\u015e\u0161\u0167\u0169\u016d\u0172\u0174\u0177\u017f"+
		"\u0181\u01a3\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}