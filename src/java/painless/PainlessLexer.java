// Generated from src/java/painless/Painless.g4 by ANTLR 4.5
package painless;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PainlessLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, LBRACK=2, RBRACK=3, LBRACE=4, RBRACE=5, LP=6, RP=7, ASSIGN=8, DOT=9, 
		COMMA=10, SEMICOLON=11, IF=12, ELSE=13, WHILE=14, DO=15, FOR=16, CONTINUE=17, 
		BREAK=18, RETURN=19, BOOLNOT=20, BWNOT=21, MUL=22, DIV=23, REM=24, ADD=25, 
		SUB=26, LSH=27, RSH=28, USH=29, LT=30, LTE=31, GT=32, GTE=33, EQ=34, NE=35, 
		BWAND=36, BWXOR=37, BWOR=38, BOOLAND=39, BOOLOR=40, COND=41, COLON=42, 
		OCTAL=43, HEX=44, INTEGER=45, DECIMAL=46, STRING=47, CHAR=48, TRUE=49, 
		FALSE=50, NULL=51, VOID=52, TYPE=53, ID=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"WS", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "LP", "RP", "ASSIGN", "DOT", 
		"COMMA", "SEMICOLON", "IF", "ELSE", "WHILE", "DO", "FOR", "CONTINUE", 
		"BREAK", "RETURN", "BOOLNOT", "BWNOT", "MUL", "DIV", "REM", "ADD", "SUB", 
		"LSH", "RSH", "USH", "LT", "LTE", "GT", "GTE", "EQ", "NE", "BWAND", "BWXOR", 
		"BWOR", "BOOLAND", "BOOLOR", "COND", "COLON", "OCTAL", "HEX", "INTEGER", 
		"DECIMAL", "STRING", "CHAR", "TRUE", "FALSE", "NULL", "VOID", "TYPE", 
		"ID"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, "'{'", "'}'", "'['", "']'", "'('", "')'", "'='", "'.'", "','", 
		"';'", "'if'", "'else'", "'while'", "'do'", "'for'", "'continue'", "'break'", 
		"'return'", "'!'", "'~'", "'*'", "'/'", "'%'", "'+'", "'-'", "'<<'", "'>>'", 
		"'>>>'", "'<'", "'<='", "'>'", "'>='", "'=='", "'!='", "'&'", "'^'", "'|'", 
		"'&&'", "'||'", "'?'", "':'", null, null, null, null, null, null, "'true'", 
		"'false'", "'null'", "'void'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "WS", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "LP", "RP", "ASSIGN", 
		"DOT", "COMMA", "SEMICOLON", "IF", "ELSE", "WHILE", "DO", "FOR", "CONTINUE", 
		"BREAK", "RETURN", "BOOLNOT", "BWNOT", "MUL", "DIV", "REM", "ADD", "SUB", 
		"LSH", "RSH", "USH", "LT", "LTE", "GT", "GTE", "EQ", "NE", "BWAND", "BWXOR", 
		"BWOR", "BOOLAND", "BOOLOR", "COND", "COLON", "OCTAL", "HEX", "INTEGER", 
		"DECIMAL", "STRING", "CHAR", "TRUE", "FALSE", "NULL", "VOID", "TYPE", 
		"ID"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PainlessLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Painless.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\28\u01b4\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\6\2q\n\2\r\2\16\2r\3\2\3\2\3\3\3"+
		"\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3"+
		"\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3"+
		"\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3"+
		"\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3"+
		"\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3"+
		" \3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3("+
		"\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\6,\u00f0\n,\r,\16,\u00f1\3,\5,\u00f5\n"+
		",\3-\3-\3-\6-\u00fa\n-\r-\16-\u00fb\3-\5-\u00ff\n-\3.\3.\3.\7.\u0104\n"+
		".\f.\16.\u0107\13.\5.\u0109\n.\3.\5.\u010c\n.\3/\3/\3/\7/\u0111\n/\f/"+
		"\16/\u0114\13/\5/\u0116\n/\3/\3/\7/\u011a\n/\f/\16/\u011d\13/\5/\u011f"+
		"\n/\3/\3/\6/\u0123\n/\r/\16/\u0124\5/\u0127\n/\3/\3/\5/\u012b\n/\3/\6"+
		"/\u012e\n/\r/\16/\u012f\5/\u0132\n/\3/\5/\u0135\n/\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\7\60\u013d\n\60\f\60\16\60\u0140\13\60\3\60\3\60\3\61\3\61"+
		"\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\64"+
		"\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\7\66"+
		"\u01a7\n\66\f\66\16\66\u01aa\13\66\5\66\u01ac\n\66\3\67\3\67\7\67\u01b0"+
		"\n\67\f\67\16\67\u01b3\13\67\3\u013e\28\3\3\5\4\7\5\t\6\13\7\r\b\17\t"+
		"\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27"+
		"-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W"+
		"-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8\3\2\20\5\2\13\f\17\17\"\"\3\2"+
		"\629\4\2NNnn\4\2ZZzz\5\2\62;CHch\3\2\63;\3\2\62;\4\2GGgg\4\2--//\4\2H"+
		"Hhh\4\2$$^^\3\2c|\5\2C\\aac|\6\2\62;C\\aac|\u01d9\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3"+
		"\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\3p\3\2\2\2\5v\3\2\2"+
		"\2\7x\3\2\2\2\tz\3\2\2\2\13|\3\2\2\2\r~\3\2\2\2\17\u0080\3\2\2\2\21\u0082"+
		"\3\2\2\2\23\u0084\3\2\2\2\25\u0086\3\2\2\2\27\u0088\3\2\2\2\31\u008a\3"+
		"\2\2\2\33\u008d\3\2\2\2\35\u0092\3\2\2\2\37\u0098\3\2\2\2!\u009b\3\2\2"+
		"\2#\u009f\3\2\2\2%\u00a8\3\2\2\2\'\u00ae\3\2\2\2)\u00b5\3\2\2\2+\u00b7"+
		"\3\2\2\2-\u00b9\3\2\2\2/\u00bb\3\2\2\2\61\u00bd\3\2\2\2\63\u00bf\3\2\2"+
		"\2\65\u00c1\3\2\2\2\67\u00c3\3\2\2\29\u00c6\3\2\2\2;\u00c9\3\2\2\2=\u00cd"+
		"\3\2\2\2?\u00cf\3\2\2\2A\u00d2\3\2\2\2C\u00d4\3\2\2\2E\u00d7\3\2\2\2G"+
		"\u00da\3\2\2\2I\u00dd\3\2\2\2K\u00df\3\2\2\2M\u00e1\3\2\2\2O\u00e3\3\2"+
		"\2\2Q\u00e6\3\2\2\2S\u00e9\3\2\2\2U\u00eb\3\2\2\2W\u00ed\3\2\2\2Y\u00f6"+
		"\3\2\2\2[\u0108\3\2\2\2]\u0126\3\2\2\2_\u0136\3\2\2\2a\u0143\3\2\2\2c"+
		"\u0147\3\2\2\2e\u014c\3\2\2\2g\u0152\3\2\2\2i\u0157\3\2\2\2k\u01ab\3\2"+
		"\2\2m\u01ad\3\2\2\2oq\t\2\2\2po\3\2\2\2qr\3\2\2\2rp\3\2\2\2rs\3\2\2\2"+
		"st\3\2\2\2tu\b\2\2\2u\4\3\2\2\2vw\7}\2\2w\6\3\2\2\2xy\7\177\2\2y\b\3\2"+
		"\2\2z{\7]\2\2{\n\3\2\2\2|}\7_\2\2}\f\3\2\2\2~\177\7*\2\2\177\16\3\2\2"+
		"\2\u0080\u0081\7+\2\2\u0081\20\3\2\2\2\u0082\u0083\7?\2\2\u0083\22\3\2"+
		"\2\2\u0084\u0085\7\60\2\2\u0085\24\3\2\2\2\u0086\u0087\7.\2\2\u0087\26"+
		"\3\2\2\2\u0088\u0089\7=\2\2\u0089\30\3\2\2\2\u008a\u008b\7k\2\2\u008b"+
		"\u008c\7h\2\2\u008c\32\3\2\2\2\u008d\u008e\7g\2\2\u008e\u008f\7n\2\2\u008f"+
		"\u0090\7u\2\2\u0090\u0091\7g\2\2\u0091\34\3\2\2\2\u0092\u0093\7y\2\2\u0093"+
		"\u0094\7j\2\2\u0094\u0095\7k\2\2\u0095\u0096\7n\2\2\u0096\u0097\7g\2\2"+
		"\u0097\36\3\2\2\2\u0098\u0099\7f\2\2\u0099\u009a\7q\2\2\u009a \3\2\2\2"+
		"\u009b\u009c\7h\2\2\u009c\u009d\7q\2\2\u009d\u009e\7t\2\2\u009e\"\3\2"+
		"\2\2\u009f\u00a0\7e\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2\7p\2\2\u00a2\u00a3"+
		"\7v\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7p\2\2\u00a5\u00a6\7w\2\2\u00a6"+
		"\u00a7\7g\2\2\u00a7$\3\2\2\2\u00a8\u00a9\7d\2\2\u00a9\u00aa\7t\2\2\u00aa"+
		"\u00ab\7g\2\2\u00ab\u00ac\7c\2\2\u00ac\u00ad\7m\2\2\u00ad&\3\2\2\2\u00ae"+
		"\u00af\7t\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7w\2\2"+
		"\u00b2\u00b3\7t\2\2\u00b3\u00b4\7p\2\2\u00b4(\3\2\2\2\u00b5\u00b6\7#\2"+
		"\2\u00b6*\3\2\2\2\u00b7\u00b8\7\u0080\2\2\u00b8,\3\2\2\2\u00b9\u00ba\7"+
		",\2\2\u00ba.\3\2\2\2\u00bb\u00bc\7\61\2\2\u00bc\60\3\2\2\2\u00bd\u00be"+
		"\7\'\2\2\u00be\62\3\2\2\2\u00bf\u00c0\7-\2\2\u00c0\64\3\2\2\2\u00c1\u00c2"+
		"\7/\2\2\u00c2\66\3\2\2\2\u00c3\u00c4\7>\2\2\u00c4\u00c5\7>\2\2\u00c58"+
		"\3\2\2\2\u00c6\u00c7\7@\2\2\u00c7\u00c8\7@\2\2\u00c8:\3\2\2\2\u00c9\u00ca"+
		"\7@\2\2\u00ca\u00cb\7@\2\2\u00cb\u00cc\7@\2\2\u00cc<\3\2\2\2\u00cd\u00ce"+
		"\7>\2\2\u00ce>\3\2\2\2\u00cf\u00d0\7>\2\2\u00d0\u00d1\7?\2\2\u00d1@\3"+
		"\2\2\2\u00d2\u00d3\7@\2\2\u00d3B\3\2\2\2\u00d4\u00d5\7@\2\2\u00d5\u00d6"+
		"\7?\2\2\u00d6D\3\2\2\2\u00d7\u00d8\7?\2\2\u00d8\u00d9\7?\2\2\u00d9F\3"+
		"\2\2\2\u00da\u00db\7#\2\2\u00db\u00dc\7?\2\2\u00dcH\3\2\2\2\u00dd\u00de"+
		"\7(\2\2\u00deJ\3\2\2\2\u00df\u00e0\7`\2\2\u00e0L\3\2\2\2\u00e1\u00e2\7"+
		"~\2\2\u00e2N\3\2\2\2\u00e3\u00e4\7(\2\2\u00e4\u00e5\7(\2\2\u00e5P\3\2"+
		"\2\2\u00e6\u00e7\7~\2\2\u00e7\u00e8\7~\2\2\u00e8R\3\2\2\2\u00e9\u00ea"+
		"\7A\2\2\u00eaT\3\2\2\2\u00eb\u00ec\7<\2\2\u00ecV\3\2\2\2\u00ed\u00ef\7"+
		"\62\2\2\u00ee\u00f0\t\3\2\2\u00ef\u00ee\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1"+
		"\u00ef\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2\u00f4\3\2\2\2\u00f3\u00f5\t\4"+
		"\2\2\u00f4\u00f3\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5X\3\2\2\2\u00f6\u00f7"+
		"\7\62\2\2\u00f7\u00f9\t\5\2\2\u00f8\u00fa\t\6\2\2\u00f9\u00f8\3\2\2\2"+
		"\u00fa\u00fb\3\2\2\2\u00fb\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u00fe"+
		"\3\2\2\2\u00fd\u00ff\t\4\2\2\u00fe\u00fd\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff"+
		"Z\3\2\2\2\u0100\u0109\7\62\2\2\u0101\u0105\t\7\2\2\u0102\u0104\t\b\2\2"+
		"\u0103\u0102\3\2\2\2\u0104\u0107\3\2\2\2\u0105\u0103\3\2\2\2\u0105\u0106"+
		"\3\2\2\2\u0106\u0109\3\2\2\2\u0107\u0105\3\2\2\2\u0108\u0100\3\2\2\2\u0108"+
		"\u0101\3\2\2\2\u0109\u010b\3\2\2\2\u010a\u010c\t\4\2\2\u010b\u010a\3\2"+
		"\2\2\u010b\u010c\3\2\2\2\u010c\\\3\2\2\2\u010d\u0116\7\62\2\2\u010e\u0112"+
		"\t\7\2\2\u010f\u0111\t\b\2\2\u0110\u010f\3\2\2\2\u0111\u0114\3\2\2\2\u0112"+
		"\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0116\3\2\2\2\u0114\u0112\3\2"+
		"\2\2\u0115\u010d\3\2\2\2\u0115\u010e\3\2\2\2\u0116\u011e\3\2\2\2\u0117"+
		"\u011b\7\60\2\2\u0118\u011a\t\b\2\2\u0119\u0118\3\2\2\2\u011a\u011d\3"+
		"\2\2\2\u011b\u0119\3\2\2\2\u011b\u011c\3\2\2\2\u011c\u011f\3\2\2\2\u011d"+
		"\u011b\3\2\2\2\u011e\u0117\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u0127\3\2"+
		"\2\2\u0120\u0122\7\60\2\2\u0121\u0123\t\b\2\2\u0122\u0121\3\2\2\2\u0123"+
		"\u0124\3\2\2\2\u0124\u0122\3\2\2\2\u0124\u0125\3\2\2\2\u0125\u0127\3\2"+
		"\2\2\u0126\u0115\3\2\2\2\u0126\u0120\3\2\2\2\u0127\u0131\3\2\2\2\u0128"+
		"\u012a\t\t\2\2\u0129\u012b\t\n\2\2\u012a\u0129\3\2\2\2\u012a\u012b\3\2"+
		"\2\2\u012b\u012d\3\2\2\2\u012c\u012e\t\b\2\2\u012d\u012c\3\2\2\2\u012e"+
		"\u012f\3\2\2\2\u012f\u012d\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u0132\3\2"+
		"\2\2\u0131\u0128\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0134\3\2\2\2\u0133"+
		"\u0135\t\13\2\2\u0134\u0133\3\2\2\2\u0134\u0135\3\2\2\2\u0135^\3\2\2\2"+
		"\u0136\u013e\7$\2\2\u0137\u0138\7^\2\2\u0138\u013d\7$\2\2\u0139\u013a"+
		"\7^\2\2\u013a\u013d\7^\2\2\u013b\u013d\n\f\2\2\u013c\u0137\3\2\2\2\u013c"+
		"\u0139\3\2\2\2\u013c\u013b\3\2\2\2\u013d\u0140\3\2\2\2\u013e\u013f\3\2"+
		"\2\2\u013e\u013c\3\2\2\2\u013f\u0141\3\2\2\2\u0140\u013e\3\2\2\2\u0141"+
		"\u0142\7$\2\2\u0142`\3\2\2\2\u0143\u0144\7)\2\2\u0144\u0145\13\2\2\2\u0145"+
		"\u0146\7)\2\2\u0146b\3\2\2\2\u0147\u0148\7v\2\2\u0148\u0149\7t\2\2\u0149"+
		"\u014a\7w\2\2\u014a\u014b\7g\2\2\u014bd\3\2\2\2\u014c\u014d\7h\2\2\u014d"+
		"\u014e\7c\2\2\u014e\u014f\7n\2\2\u014f\u0150\7u\2\2\u0150\u0151\7g\2\2"+
		"\u0151f\3\2\2\2\u0152\u0153\7p\2\2\u0153\u0154\7w\2\2\u0154\u0155\7n\2"+
		"\2\u0155\u0156\7n\2\2\u0156h\3\2\2\2\u0157\u0158\7x\2\2\u0158\u0159\7"+
		"q\2\2\u0159\u015a\7k\2\2\u015a\u015b\7f\2\2\u015bj\3\2\2\2\u015c\u015d"+
		"\7d\2\2\u015d\u015e\7q\2\2\u015e\u015f\7q\2\2\u015f\u01ac\7n\2\2\u0160"+
		"\u0161\7d\2\2\u0161\u0162\7{\2\2\u0162\u0163\7v\2\2\u0163\u01ac\7g\2\2"+
		"\u0164\u0165\7u\2\2\u0165\u0166\7j\2\2\u0166\u0167\7q\2\2\u0167\u0168"+
		"\7t\2\2\u0168\u01ac\7v\2\2\u0169\u016a\7k\2\2\u016a\u016b\7p\2\2\u016b"+
		"\u01ac\7v\2\2\u016c\u016d\7n\2\2\u016d\u016e\7q\2\2\u016e\u016f\7p\2\2"+
		"\u016f\u01ac\7i\2\2\u0170\u0171\7h\2\2\u0171\u0172\7n\2\2\u0172\u0173"+
		"\7q\2\2\u0173\u0174\7c\2\2\u0174\u01ac\7v\2\2\u0175\u0176\7f\2\2\u0176"+
		"\u0177\7q\2\2\u0177\u0178\7w\2\2\u0178\u0179\7d\2\2\u0179\u017a\7n\2\2"+
		"\u017a\u01ac\7g\2\2\u017b\u017c\7e\2\2\u017c\u017d\7j\2\2\u017d\u017e"+
		"\7c\2\2\u017e\u01ac\7t\2\2\u017f\u0180\7u\2\2\u0180\u0181\7v\2\2\u0181"+
		"\u0182\7t\2\2\u0182\u0183\7k\2\2\u0183\u0184\7p\2\2\u0184\u01ac\7i\2\2"+
		"\u0185\u0186\7q\2\2\u0186\u0187\7d\2\2\u0187\u0188\7l\2\2\u0188\u0189"+
		"\7g\2\2\u0189\u018a\7e\2\2\u018a\u01ac\7v\2\2\u018b\u018c\7f\2\2\u018c"+
		"\u018d\7c\2\2\u018d\u018e\7v\2\2\u018e\u01ac\7g\2\2\u018f\u0190\7v\2\2"+
		"\u0190\u0191\7k\2\2\u0191\u0192\7o\2\2\u0192\u0193\7g\2\2\u0193\u0194"+
		"\7f\2\2\u0194\u0195\7g\2\2\u0195\u0196\7n\2\2\u0196\u0197\7v\2\2\u0197"+
		"\u01ac\7c\2\2\u0198\u0199\7r\2\2\u0199\u019a\7q\2\2\u019a\u019b\7k\2\2"+
		"\u019b\u019c\7p\2\2\u019c\u01ac\7v\2\2\u019d\u019e\7n\2\2\u019e\u019f"+
		"\7k\2\2\u019f\u01a0\7u\2\2\u01a0\u01ac\7v\2\2\u01a1\u01a2\7o\2\2\u01a2"+
		"\u01a3\7c\2\2\u01a3\u01ac\7r\2\2\u01a4\u01a8\7&\2\2\u01a5\u01a7\t\r\2"+
		"\2\u01a6\u01a5\3\2\2\2\u01a7\u01aa\3\2\2\2\u01a8\u01a6\3\2\2\2\u01a8\u01a9"+
		"\3\2\2\2\u01a9\u01ac\3\2\2\2\u01aa\u01a8\3\2\2\2\u01ab\u015c\3\2\2\2\u01ab"+
		"\u0160\3\2\2\2\u01ab\u0164\3\2\2\2\u01ab\u0169\3\2\2\2\u01ab\u016c\3\2"+
		"\2\2\u01ab\u0170\3\2\2\2\u01ab\u0175\3\2\2\2\u01ab\u017b\3\2\2\2\u01ab"+
		"\u017f\3\2\2\2\u01ab\u0185\3\2\2\2\u01ab\u018b\3\2\2\2\u01ab\u018f\3\2"+
		"\2\2\u01ab\u0198\3\2\2\2\u01ab\u019d\3\2\2\2\u01ab\u01a1\3\2\2\2\u01ab"+
		"\u01a4\3\2\2\2\u01acl\3\2\2\2\u01ad\u01b1\t\16\2\2\u01ae\u01b0\t\17\2"+
		"\2\u01af\u01ae\3\2\2\2\u01b0\u01b3\3\2\2\2\u01b1\u01af\3\2\2\2\u01b1\u01b2"+
		"\3\2\2\2\u01b2n\3\2\2\2\u01b3\u01b1\3\2\2\2\32\2r\u00f1\u00f4\u00fb\u00fe"+
		"\u0105\u0108\u010b\u0112\u0115\u011b\u011e\u0124\u0126\u012a\u012f\u0131"+
		"\u0134\u013c\u013e\u01a8\u01ab\u01b1\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}