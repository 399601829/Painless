// ANTLR GENERATED CODE: DO NOT EDIT
package org.elasticsearch.plan.a;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
class PlanALexer extends Lexer {
  static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

  protected static final DFA[] _decisionToDFA;
  protected static final PredictionContextCache _sharedContextCache =
    new PredictionContextCache();
  public static final int
    WS=1, LBRACK=2, RBRACK=3, LBRACE=4, RBRACE=5, LP=6, RP=7, DOT=8, COMMA=9, 
    SEMICOLON=10, IF=11, ELSE=12, WHILE=13, DO=14, FOR=15, CONTINUE=16, BREAK=17, 
    RETURN=18, BOOLNOT=19, BWNOT=20, MUL=21, DIV=22, REM=23, ADD=24, SUB=25, 
    LSH=26, RSH=27, USH=28, CAT=29, LT=30, LTE=31, GT=32, GTE=33, EQ=34, EQR=35, 
    NE=36, NER=37, BWAND=38, BWXOR=39, BWOR=40, BOOLAND=41, BOOLOR=42, COND=43, 
    COLON=44, INCR=45, DECR=46, ASSIGN=47, AADD=48, ASUB=49, AMUL=50, ADIV=51, 
    AREM=52, AAND=53, AXOR=54, AOR=55, ALSH=56, ARSH=57, AUSH=58, ACAT=59, 
    OCTAL=60, HEX=61, INTEGER=62, DECIMAL=63, STRING=64, CHAR=65, TRUE=66, 
    FALSE=67, NULL=68, VOID=69, ID=70;
  public static String[] modeNames = {
    "DEFAULT_MODE"
  };

  public static final String[] ruleNames = {
    "WS", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "LP", "RP", "DOT", "COMMA", 
    "SEMICOLON", "IF", "ELSE", "WHILE", "DO", "FOR", "CONTINUE", "BREAK", 
    "RETURN", "BOOLNOT", "BWNOT", "MUL", "DIV", "REM", "ADD", "SUB", "LSH", 
    "RSH", "USH", "CAT", "LT", "LTE", "GT", "GTE", "EQ", "EQR", "NE", "NER", 
    "BWAND", "BWXOR", "BWOR", "BOOLAND", "BOOLOR", "COND", "COLON", "INCR", 
    "DECR", "ASSIGN", "AADD", "ASUB", "AMUL", "ADIV", "AREM", "AAND", "AXOR", 
    "AOR", "ALSH", "ARSH", "AUSH", "ACAT", "OCTAL", "HEX", "INTEGER", "DECIMAL", 
    "STRING", "CHAR", "TRUE", "FALSE", "NULL", "VOID", "ID"
  };

  private static final String[] _LITERAL_NAMES = {
    null, null, "'{'", "'}'", "'['", "']'", "'('", "')'", "'.'", "','", "';'", 
    "'if'", "'else'", "'while'", "'do'", "'for'", "'continue'", "'break'", 
    "'return'", "'!'", "'~'", "'*'", "'/'", "'%'", "'+'", "'-'", "'<<'", "'>>'", 
    "'>>>'", "'..'", "'<'", "'<='", "'>'", "'>='", "'=='", "'==='", "'!='", 
    "'!=='", "'&'", "'^'", "'|'", "'&&'", "'||'", "'?'", "':'", "'++'", "'--'", 
    "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'^='", "'|='", 
    "'<<='", "'>>='", "'>>>='", "'..='", null, null, null, null, null, null, 
    "'true'", "'false'", "'null'", "'void'"
  };
  private static final String[] _SYMBOLIC_NAMES = {
    null, "WS", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "LP", "RP", "DOT", 
    "COMMA", "SEMICOLON", "IF", "ELSE", "WHILE", "DO", "FOR", "CONTINUE", 
    "BREAK", "RETURN", "BOOLNOT", "BWNOT", "MUL", "DIV", "REM", "ADD", "SUB", 
    "LSH", "RSH", "USH", "CAT", "LT", "LTE", "GT", "GTE", "EQ", "EQR", "NE", 
    "NER", "BWAND", "BWXOR", "BWOR", "BOOLAND", "BOOLOR", "COND", "COLON", 
    "INCR", "DECR", "ASSIGN", "AADD", "ASUB", "AMUL", "ADIV", "AREM", "AAND", 
    "AXOR", "AOR", "ALSH", "ARSH", "AUSH", "ACAT", "OCTAL", "HEX", "INTEGER", 
    "DECIMAL", "STRING", "CHAR", "TRUE", "FALSE", "NULL", "VOID", "ID"
  };
  public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

  /**
   * @deprecated Use {@link #VOCABULARY} instead.
   */
  @Deprecated
  public static final String[] tokenNames;
  static {
    tokenNames = new String[_SYMBOLIC_NAMES.length];
    for (int i = 0; i < tokenNames.length; i++) {
      tokenNames[i] = VOCABULARY.getLiteralName(i);
      if (tokenNames[i] == null) {
        tokenNames[i] = VOCABULARY.getSymbolicName(i);
      }

      if (tokenNames[i] == null) {
        tokenNames[i] = "<INVALID>";
      }
    }
  }

  @Override
  @Deprecated
  public String[] getTokenNames() {
    return tokenNames;
  }

  @Override

  public Vocabulary getVocabulary() {
    return VOCABULARY;
  }


  public PlanALexer(CharStream input) {
    super(input);
    _interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
  }

  @Override
  public String getGrammarFileName() { return "PlanA.g4"; }

  @Override
  public String[] getRuleNames() { return ruleNames; }

  @Override
  public String getSerializedATN() { return _serializedATN; }

  @Override
  public String[] getModeNames() { return modeNames; }

  @Override
  public ATN getATN() { return _ATN; }

  public static final String _serializedATN =
    "\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2H\u01bd\b\1\4\2\t"+
    "\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
    "\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
    "\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
    "\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
    "\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
    ",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
    "\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
    "\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\3\2\6\2\u0091"+
    "\n\2\r\2\16\2\u0092\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3"+
    "\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16"+
    "\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21"+
    "\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23"+
    "\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27"+
    "\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35"+
    "\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3"+
    "#\3$\3$\3$\3$\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3*\3+\3+"+
    "\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3"+
    "\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3"+
    "\67\3\67\38\38\38\39\39\39\39\3:\3:\3:\3:\3;\3;\3;\3;\3;\3<\3<\3<\3<\3"+
    "=\3=\6=\u014a\n=\r=\16=\u014b\3=\5=\u014f\n=\3>\3>\3>\6>\u0154\n>\r>\16"+
    ">\u0155\3>\5>\u0159\n>\3?\3?\3?\7?\u015e\n?\f?\16?\u0161\13?\5?\u0163"+
    "\n?\3?\5?\u0166\n?\3@\3@\3@\7@\u016b\n@\f@\16@\u016e\13@\5@\u0170\n@\3"+
    "@\3@\7@\u0174\n@\f@\16@\u0177\13@\5@\u0179\n@\3@\3@\6@\u017d\n@\r@\16"+
    "@\u017e\5@\u0181\n@\3@\3@\5@\u0185\n@\3@\6@\u0188\n@\r@\16@\u0189\5@\u018c"+
    "\n@\3@\5@\u018f\n@\3A\3A\3A\3A\3A\3A\7A\u0197\nA\fA\16A\u019a\13A\3A\3"+
    "A\3B\3B\3B\3B\3C\3C\3C\3C\3C\3D\3D\3D\3D\3D\3D\3E\3E\3E\3E\3E\3F\3F\3"+
    "F\3F\3F\3G\3G\7G\u01b9\nG\fG\16G\u01bc\13G\3\u0198\2H\3\3\5\4\7\5\t\6"+
    "\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24"+
    "\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K"+
    "\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177"+
    "A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\3\2\17\5\2\13\f\17"+
    "\17\"\"\3\2\629\4\2NNnn\4\2ZZzz\5\2\62;CHch\3\2\63;\3\2\62;\4\2GGgg\4"+
    "\2--//\4\2HHhh\4\2$$^^\5\2C\\aac|\6\2\62;C\\aac|\u01d2\2\3\3\2\2\2\2\5"+
    "\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2"+
    "\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33"+
    "\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2"+
    "\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2"+
    "\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2"+
    "\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K"+
    "\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2"+
    "\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2"+
    "\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q"+
    "\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2"+
    "\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087"+
    "\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\3\u0090\3\2\2"+
    "\2\5\u0096\3\2\2\2\7\u0098\3\2\2\2\t\u009a\3\2\2\2\13\u009c\3\2\2\2\r"+
    "\u009e\3\2\2\2\17\u00a0\3\2\2\2\21\u00a2\3\2\2\2\23\u00a4\3\2\2\2\25\u00a6"+
    "\3\2\2\2\27\u00a8\3\2\2\2\31\u00ab\3\2\2\2\33\u00b0\3\2\2\2\35\u00b6\3"+
    "\2\2\2\37\u00b9\3\2\2\2!\u00bd\3\2\2\2#\u00c6\3\2\2\2%\u00cc\3\2\2\2\'"+
    "\u00d3\3\2\2\2)\u00d5\3\2\2\2+\u00d7\3\2\2\2-\u00d9\3\2\2\2/\u00db\3\2"+
    "\2\2\61\u00dd\3\2\2\2\63\u00df\3\2\2\2\65\u00e1\3\2\2\2\67\u00e4\3\2\2"+
    "\29\u00e7\3\2\2\2;\u00eb\3\2\2\2=\u00ee\3\2\2\2?\u00f0\3\2\2\2A\u00f3"+
    "\3\2\2\2C\u00f5\3\2\2\2E\u00f8\3\2\2\2G\u00fb\3\2\2\2I\u00ff\3\2\2\2K"+
    "\u0102\3\2\2\2M\u0106\3\2\2\2O\u0108\3\2\2\2Q\u010a\3\2\2\2S\u010c\3\2"+
    "\2\2U\u010f\3\2\2\2W\u0112\3\2\2\2Y\u0114\3\2\2\2[\u0116\3\2\2\2]\u0119"+
    "\3\2\2\2_\u011c\3\2\2\2a\u011e\3\2\2\2c\u0121\3\2\2\2e\u0124\3\2\2\2g"+
    "\u0127\3\2\2\2i\u012a\3\2\2\2k\u012d\3\2\2\2m\u0130\3\2\2\2o\u0133\3\2"+
    "\2\2q\u0136\3\2\2\2s\u013a\3\2\2\2u\u013e\3\2\2\2w\u0143\3\2\2\2y\u0147"+
    "\3\2\2\2{\u0150\3\2\2\2}\u0162\3\2\2\2\177\u0180\3\2\2\2\u0081\u0190\3"+
    "\2\2\2\u0083\u019d\3\2\2\2\u0085\u01a1\3\2\2\2\u0087\u01a6\3\2\2\2\u0089"+
    "\u01ac\3\2\2\2\u008b\u01b1\3\2\2\2\u008d\u01b6\3\2\2\2\u008f\u0091\t\2"+
    "\2\2\u0090\u008f\3\2\2\2\u0091\u0092\3\2\2\2\u0092\u0090\3\2\2\2\u0092"+
    "\u0093\3\2\2\2\u0093\u0094\3\2\2\2\u0094\u0095\b\2\2\2\u0095\4\3\2\2\2"+
    "\u0096\u0097\7}\2\2\u0097\6\3\2\2\2\u0098\u0099\7\177\2\2\u0099\b\3\2"+
    "\2\2\u009a\u009b\7]\2\2\u009b\n\3\2\2\2\u009c\u009d\7_\2\2\u009d\f\3\2"+
    "\2\2\u009e\u009f\7*\2\2\u009f\16\3\2\2\2\u00a0\u00a1\7+\2\2\u00a1\20\3"+
    "\2\2\2\u00a2\u00a3\7\60\2\2\u00a3\22\3\2\2\2\u00a4\u00a5\7.\2\2\u00a5"+
    "\24\3\2\2\2\u00a6\u00a7\7=\2\2\u00a7\26\3\2\2\2\u00a8\u00a9\7k\2\2\u00a9"+
    "\u00aa\7h\2\2\u00aa\30\3\2\2\2\u00ab\u00ac\7g\2\2\u00ac\u00ad\7n\2\2\u00ad"+
    "\u00ae\7u\2\2\u00ae\u00af\7g\2\2\u00af\32\3\2\2\2\u00b0\u00b1\7y\2\2\u00b1"+
    "\u00b2\7j\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7n\2\2\u00b4\u00b5\7g\2\2"+
    "\u00b5\34\3\2\2\2\u00b6\u00b7\7f\2\2\u00b7\u00b8\7q\2\2\u00b8\36\3\2\2"+
    "\2\u00b9\u00ba\7h\2\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7t\2\2\u00bc \3\2"+
    "\2\2\u00bd\u00be\7e\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7p\2\2\u00c0\u00c1"+
    "\7v\2\2\u00c1\u00c2\7k\2\2\u00c2\u00c3\7p\2\2\u00c3\u00c4\7w\2\2\u00c4"+
    "\u00c5\7g\2\2\u00c5\"\3\2\2\2\u00c6\u00c7\7d\2\2\u00c7\u00c8\7t\2\2\u00c8"+
    "\u00c9\7g\2\2\u00c9\u00ca\7c\2\2\u00ca\u00cb\7m\2\2\u00cb$\3\2\2\2\u00cc"+
    "\u00cd\7t\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf\7v\2\2\u00cf\u00d0\7w\2\2"+
    "\u00d0\u00d1\7t\2\2\u00d1\u00d2\7p\2\2\u00d2&\3\2\2\2\u00d3\u00d4\7#\2"+
    "\2\u00d4(\3\2\2\2\u00d5\u00d6\7\u0080\2\2\u00d6*\3\2\2\2\u00d7\u00d8\7"+
    ",\2\2\u00d8,\3\2\2\2\u00d9\u00da\7\61\2\2\u00da.\3\2\2\2\u00db\u00dc\7"+
    "\'\2\2\u00dc\60\3\2\2\2\u00dd\u00de\7-\2\2\u00de\62\3\2\2\2\u00df\u00e0"+
    "\7/\2\2\u00e0\64\3\2\2\2\u00e1\u00e2\7>\2\2\u00e2\u00e3\7>\2\2\u00e3\66"+
    "\3\2\2\2\u00e4\u00e5\7@\2\2\u00e5\u00e6\7@\2\2\u00e68\3\2\2\2\u00e7\u00e8"+
    "\7@\2\2\u00e8\u00e9\7@\2\2\u00e9\u00ea\7@\2\2\u00ea:\3\2\2\2\u00eb\u00ec"+
    "\7\60\2\2\u00ec\u00ed\7\60\2\2\u00ed<\3\2\2\2\u00ee\u00ef\7>\2\2\u00ef"+
    ">\3\2\2\2\u00f0\u00f1\7>\2\2\u00f1\u00f2\7?\2\2\u00f2@\3\2\2\2\u00f3\u00f4"+
    "\7@\2\2\u00f4B\3\2\2\2\u00f5\u00f6\7@\2\2\u00f6\u00f7\7?\2\2\u00f7D\3"+
    "\2\2\2\u00f8\u00f9\7?\2\2\u00f9\u00fa\7?\2\2\u00faF\3\2\2\2\u00fb\u00fc"+
    "\7?\2\2\u00fc\u00fd\7?\2\2\u00fd\u00fe\7?\2\2\u00feH\3\2\2\2\u00ff\u0100"+
    "\7#\2\2\u0100\u0101\7?\2\2\u0101J\3\2\2\2\u0102\u0103\7#\2\2\u0103\u0104"+
    "\7?\2\2\u0104\u0105\7?\2\2\u0105L\3\2\2\2\u0106\u0107\7(\2\2\u0107N\3"+
    "\2\2\2\u0108\u0109\7`\2\2\u0109P\3\2\2\2\u010a\u010b\7~\2\2\u010bR\3\2"+
    "\2\2\u010c\u010d\7(\2\2\u010d\u010e\7(\2\2\u010eT\3\2\2\2\u010f\u0110"+
    "\7~\2\2\u0110\u0111\7~\2\2\u0111V\3\2\2\2\u0112\u0113\7A\2\2\u0113X\3"+
    "\2\2\2\u0114\u0115\7<\2\2\u0115Z\3\2\2\2\u0116\u0117\7-\2\2\u0117\u0118"+
    "\7-\2\2\u0118\\\3\2\2\2\u0119\u011a\7/\2\2\u011a\u011b\7/\2\2\u011b^\3"+
    "\2\2\2\u011c\u011d\7?\2\2\u011d`\3\2\2\2\u011e\u011f\7-\2\2\u011f\u0120"+
    "\7?\2\2\u0120b\3\2\2\2\u0121\u0122\7/\2\2\u0122\u0123\7?\2\2\u0123d\3"+
    "\2\2\2\u0124\u0125\7,\2\2\u0125\u0126\7?\2\2\u0126f\3\2\2\2\u0127\u0128"+
    "\7\61\2\2\u0128\u0129\7?\2\2\u0129h\3\2\2\2\u012a\u012b\7\'\2\2\u012b"+
    "\u012c\7?\2\2\u012cj\3\2\2\2\u012d\u012e\7(\2\2\u012e\u012f\7?\2\2\u012f"+
    "l\3\2\2\2\u0130\u0131\7`\2\2\u0131\u0132\7?\2\2\u0132n\3\2\2\2\u0133\u0134"+
    "\7~\2\2\u0134\u0135\7?\2\2\u0135p\3\2\2\2\u0136\u0137\7>\2\2\u0137\u0138"+
    "\7>\2\2\u0138\u0139\7?\2\2\u0139r\3\2\2\2\u013a\u013b\7@\2\2\u013b\u013c"+
    "\7@\2\2\u013c\u013d\7?\2\2\u013dt\3\2\2\2\u013e\u013f\7@\2\2\u013f\u0140"+
    "\7@\2\2\u0140\u0141\7@\2\2\u0141\u0142\7?\2\2\u0142v\3\2\2\2\u0143\u0144"+
    "\7\60\2\2\u0144\u0145\7\60\2\2\u0145\u0146\7?\2\2\u0146x\3\2\2\2\u0147"+
    "\u0149\7\62\2\2\u0148\u014a\t\3\2\2\u0149\u0148\3\2\2\2\u014a\u014b\3"+
    "\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014e\3\2\2\2\u014d"+
    "\u014f\t\4\2\2\u014e\u014d\3\2\2\2\u014e\u014f\3\2\2\2\u014fz\3\2\2\2"+
    "\u0150\u0151\7\62\2\2\u0151\u0153\t\5\2\2\u0152\u0154\t\6\2\2\u0153\u0152"+
    "\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156"+
    "\u0158\3\2\2\2\u0157\u0159\t\4\2\2\u0158\u0157\3\2\2\2\u0158\u0159\3\2"+
    "\2\2\u0159|\3\2\2\2\u015a\u0163\7\62\2\2\u015b\u015f\t\7\2\2\u015c\u015e"+
    "\t\b\2\2\u015d\u015c\3\2\2\2\u015e\u0161\3\2\2\2\u015f\u015d\3\2\2\2\u015f"+
    "\u0160\3\2\2\2\u0160\u0163\3\2\2\2\u0161\u015f\3\2\2\2\u0162\u015a\3\2"+
    "\2\2\u0162\u015b\3\2\2\2\u0163\u0165\3\2\2\2\u0164\u0166\t\4\2\2\u0165"+
    "\u0164\3\2\2\2\u0165\u0166\3\2\2\2\u0166~\3\2\2\2\u0167\u0170\7\62\2\2"+
    "\u0168\u016c\t\7\2\2\u0169\u016b\t\b\2\2\u016a\u0169\3\2\2\2\u016b\u016e"+
    "\3\2\2\2\u016c\u016a\3\2\2\2\u016c\u016d\3\2\2\2\u016d\u0170\3\2\2\2\u016e"+
    "\u016c\3\2\2\2\u016f\u0167\3\2\2\2\u016f\u0168\3\2\2\2\u0170\u0178\3\2"+
    "\2\2\u0171\u0175\7\60\2\2\u0172\u0174\t\b\2\2\u0173\u0172\3\2\2\2\u0174"+
    "\u0177\3\2\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2\2\2\u0176\u0179\3\2"+
    "\2\2\u0177\u0175\3\2\2\2\u0178\u0171\3\2\2\2\u0178\u0179\3\2\2\2\u0179"+
    "\u0181\3\2\2\2\u017a\u017c\7\60\2\2\u017b\u017d\t\b\2\2\u017c\u017b\3"+
    "\2\2\2\u017d\u017e\3\2\2\2\u017e\u017c\3\2\2\2\u017e\u017f\3\2\2\2\u017f"+
    "\u0181\3\2\2\2\u0180\u016f\3\2\2\2\u0180\u017a\3\2\2\2\u0181\u018b\3\2"+
    "\2\2\u0182\u0184\t\t\2\2\u0183\u0185\t\n\2\2\u0184\u0183\3\2\2\2\u0184"+
    "\u0185\3\2\2\2\u0185\u0187\3\2\2\2\u0186\u0188\t\b\2\2\u0187\u0186\3\2"+
    "\2\2\u0188\u0189\3\2\2\2\u0189\u0187\3\2\2\2\u0189\u018a\3\2\2\2\u018a"+
    "\u018c\3\2\2\2\u018b\u0182\3\2\2\2\u018b\u018c\3\2\2\2\u018c\u018e\3\2"+
    "\2\2\u018d\u018f\t\13\2\2\u018e\u018d\3\2\2\2\u018e\u018f\3\2\2\2\u018f"+
    "\u0080\3\2\2\2\u0190\u0198\7$\2\2\u0191\u0192\7^\2\2\u0192\u0197\7$\2"+
    "\2\u0193\u0194\7^\2\2\u0194\u0197\7^\2\2\u0195\u0197\n\f\2\2\u0196\u0191"+
    "\3\2\2\2\u0196\u0193\3\2\2\2\u0196\u0195\3\2\2\2\u0197\u019a\3\2\2\2\u0198"+
    "\u0199\3\2\2\2\u0198\u0196\3\2\2\2\u0199\u019b\3\2\2\2\u019a\u0198\3\2"+
    "\2\2\u019b\u019c\7$\2\2\u019c\u0082\3\2\2\2\u019d\u019e\7)\2\2\u019e\u019f"+
    "\13\2\2\2\u019f\u01a0\7)\2\2\u01a0\u0084\3\2\2\2\u01a1\u01a2\7v\2\2\u01a2"+
    "\u01a3\7t\2\2\u01a3\u01a4\7w\2\2\u01a4\u01a5\7g\2\2\u01a5\u0086\3\2\2"+
    "\2\u01a6\u01a7\7h\2\2\u01a7\u01a8\7c\2\2\u01a8\u01a9\7n\2\2\u01a9\u01aa"+
    "\7u\2\2\u01aa\u01ab\7g\2\2\u01ab\u0088\3\2\2\2\u01ac\u01ad\7p\2\2\u01ad"+
    "\u01ae\7w\2\2\u01ae\u01af\7n\2\2\u01af\u01b0\7n\2\2\u01b0\u008a\3\2\2"+
    "\2\u01b1\u01b2\7x\2\2\u01b2\u01b3\7q\2\2\u01b3\u01b4\7k\2\2\u01b4\u01b5"+
    "\7f\2\2\u01b5\u008c\3\2\2\2\u01b6\u01ba\t\r\2\2\u01b7\u01b9\t\16\2\2\u01b8"+
    "\u01b7\3\2\2\2\u01b9\u01bc\3\2\2\2\u01ba\u01b8\3\2\2\2\u01ba\u01bb\3\2"+
    "\2\2\u01bb\u008e\3\2\2\2\u01bc\u01ba\3\2\2\2\30\2\u0092\u014b\u014e\u0155"+
    "\u0158\u015f\u0162\u0165\u016c\u016f\u0175\u0178\u017e\u0180\u0184\u0189"+
    "\u018b\u018e\u0196\u0198\u01ba\3\b\2\2";
  public static final ATN _ATN =
    new ATNDeserializer().deserialize(_serializedATN.toCharArray());
  static {
    _decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
    for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
      _decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
    }
  }
}
