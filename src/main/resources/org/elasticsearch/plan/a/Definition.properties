# Note that only the first parameter of the property key matters, the rest is only there to be a unique identifier.
#
# The following definitions are allowed:
#
# struct - A Plan A definition that holds constructors, functions, methods, statics, and members
#          where functions are static Java methods, and statics are static Java members.
#     * Parameters: the Plan A type name, the Java type Name
#     * Example: struct.int = int int
#
# generic - The same as a struct except that its methods may specify stricter
#           argument types for compile-time checking.
#     * Example: generic.StringMap = StringMap java.util.Map
#
# runtime - The same as a struct except that its methods will be cached in MethodHandles
#           for possible dynamic lookup.
#     * Example: runtime.Object = Object java.lang.Object
#
# constructor - The equivalent to a Java constructor.  Will only be accessible through the defining struct.
#     * Parameters: Plan A struct name, Plan A constructor name, Java method argument list specified as Plan A types
#     * Example: constructor.String.copy = String copy (String)
#
# function - The equivalent to a Java static method.  Will only be accessible through the defining struct.
#     * Parameters: Plan A struct name, plan A function name, Java return type specified as a Plan A type,
#                   Java method name followed by the Java method argument list specified as Plan A types
#     * Example: function.utility.numberToBoolean = utility numberToBoolean boolean numberToBoolean(number)
#
# method - The equivalent to a Java member  method.The same as a function except that the 'this' object
#          is inferred from the calling object.  If a method is generic, a stricter type may be specified
#          using a Plan A type ^ Plan A type. Note the use of a generic in the second example where the normal
#          method takes an Object, but the Plan A call will be restricted to being a String or subclass of String.
#     * Example: method.String.endsWith = String endsWith boolean endsWith(String)
#     * Example: method.StringMap.get = StringMap get Object get(Object^String)
#
# copy - This will copy all the child structs methods and members to the parent struct's methods and member.
#        Note in the example that HashMap will first adopt the Map's methods and members and then the Object's.
#        Conflicts are resolved first come, first serve, but will not throw an exception.
#     * Parameters: Plan A struct name (parent), Plan A struct name (child)...
#     * Example: copy.HashMap = HashMap Map Object
#
# numeric - This specifies a numeric cast that will be implicit.  Once specified, the two numeric types will be
#           implicitly cast from the from type to the the to type.  In the example, a byte will be implicitly
#           cast to a short if the situation requires it.
#      * Parameters: Plan A numeric type (from), Plan A numeric type (to)
#      * Example: numeric.byte.short = byte short
#
# upcast - This is the same as numeric except it specifies Object subclasses.
#      * Example: upcast.Object.Map = Object Map
#
# transform - This will call a specified Java method during a cast to convert the from type to the to type.
#             If the Java method is static the signature must be of type name(type).  If the method is
#             non-static the signature must be of type name() where the member method is called on the from type.
#             Transforms must be specified as implicit or explicit.  An implicit transform will automatically
#             convert between the from type to the to type when required.  An explicit transform will only convert
#             between between the from type to the to type when an explicit cast is made. The specified method
#             may have a different return value type from the to type as long as the two types are in a super-sub
#             class relationship.  The same is true of the argument and the from type.
#      * Parameters: [explicit/implicit], Plan A type (from), Plan A type (to),
#                    the plan A struct that has the invoking method, [function/method], the Plan A method name
#      * Example: transform.Double.byte = explicit Double byte Number method byteValue

struct.void    = void    void
struct.boolean = boolean boolean
struct.byte    = byte    byte
struct.short   = short   short
struct.char    = char    char
struct.int     = int     int
struct.long    = long    long
struct.float   = float   float
struct.double  = double  double

runtime.Object      = Object       java.lang.Object
struct.CharSequence = CharSequence java.lang.CharSequence
runtime.String      = String       java.lang.String
generic.StringMap   = StringMap    java.util.Map
struct.Executable   = Executable   org.elasticsearch.plan.a.Executable

runtime.Number  = Number  java.lang.Number
runtime.Utility = Utility org.elasticsearch.plan.a.Utility

runtime.Boolean   = Boolean   java.lang.Boolean
runtime.Byte      = Byte      java.lang.Byte
runtime.Short     = Short     java.lang.Short
runtime.Character = Character java.lang.Character
runtime.Integer   = Integer   java.lang.Integer
runtime.Long      = Long      java.lang.Long
runtime.Float     = Float     java.lang.Float
runtime.Double    = Double    java.lang.Double

runtime.List          = List           java.util.List
runtime.ArrayList     = ArrayList      java.util.ArrayList
runtime.Map           = Map            java.util.Map
runtime.HashMap       = HashMap        java.util.HashMap
generic.StringHashMap = StringHashMap  java.util.HashMap

method.Object.toString = Object toString String toString()
method.Object.equals   = Object equals boolean equals(Object)
method.Object.hashCode = Object hashCode int hashCode()

method.CharSequence.charAt = CharSequence charAt char charAt(int)
method.CharSequence.length = CharSequence length int length()

constructor.String.new        = String new ()
constructor.String.fromString = String fromString (String)
method.String.codePointAt     = String codePointAt int codePointAt(int)
method.String.compareTo       = String compareTo int compareTo(String)
method.String.concat          = String concat String concat(String)
method.String.endsWith        = String endsWith boolean endsWith(String)
method.String.indexOf         = String indexOf int indexOf(String, int)
method.String.isEmpty         = String isEmpty boolean isEmpty()
method.String.replace         = String replace String replace(CharSequence, CharSequence)
method.String.startsWith      = String startsWith boolean startsWith(String)
method.String.substring       = String subString String substring(int, int)
method.String.toCharArray     = String toCharArray char[] toCharArray()
method.String.trim            = String trim String trim()

method.Number.byteValue   = Number byteValue byte byteValue()
method.Number.shortValue  = Number shortValue short shortValue()
method.Number.intValue    = Number intValue int intValue()
method.Number.longValue   = Number longValue long longValue()
method.Number.floatValue  = Number floatValue float floatValue()
method.Number.doubleValue = Number doubleValue double doubleValue()

function.Utility.NumberToboolean    = Utility NumberToboolean boolean NumberToboolean(Number)
function.Utility.NumberTochar       = Utility NumberTochar char NumberTochar(Number)
function.Utility.booleanTobyte      = Utility booleanTobyte byte booleanTobyte(boolean)
function.Utility.booleanToshort     = Utility booleanToshort short booleanToshort(boolean)
function.Utility.booleanTochar      = Utility booleanTochar char booleanTochar(boolean)
function.Utility.booleanToint       = Utility booleanToint int booleanToint(boolean)
function.Utility.booleanTolong      = Utility booleanTolong long booleanTolong(boolean)
function.Utility.booleanTofloat     = Utility booleanTofloat float booleanTofloat(boolean)
function.Utility.booleanTodouble    = Utility booleanTodouble double booleanTodouble(boolean)
function.Utility.booleanToInteger   = Utility booleanToInteger Integer booleanToInteger(boolean)
function.Utility.BooleanTobyte      = Utility BooleanTobyte byte BooleanTobyte(Boolean)
function.Utility.BooleanToshort     = Utility BooleanToshort short BooleanToshort(Boolean)
function.Utility.BooleanTochar      = Utility BooleanTochar char BooleanTochar(Boolean)
function.Utility.BooleanToint       = Utility BooleanToint int BooleanToint(Boolean)
function.Utility.BooleanTolong      = Utility BooleanTolong long BooleanTolong(Boolean)
function.Utility.BooleanTofloat     = Utility BooleanTofloat float BooleanTofloat(Boolean)
function.Utility.BooleanTodouble    = Utility BooleanTodouble double BooleanTodouble(Boolean)
function.Utility.byteToboolean      = Utility byteToboolean boolean byteToboolean(byte)
function.Utility.ByteToboolean      = Utility ByteToboolean boolean ByteToboolean(Byte)
function.Utility.ByteTochar         = Utility ByteTochar char ByteTochar(Byte)
function.Utility.shortToboolean     = Utility shortToboolean boolean shortToboolean(short)
function.Utility.ShortToboolean     = Utility ShortToboolean boolean ShortToboolean(Short)
function.Utility.ShortTochar        = Utility ShortTochar char ShortTochar(Short)
function.Utility.charToboolean      = Utility charToboolean boolean charToboolean(char)
function.Utility.charToInteger      = Utility charToInteger Integer charToInteger(char)
function.Utility.CharacterToboolean = Utility CharacterToboolean boolean CharacterToboolean(Character)
function.Utility.CharacterTobyte    = Utility CharacterTobyte byte CharacterTobyte(Character)
function.Utility.CharacterToshort   = Utility CharacterToshort short CharacterToshort(Character)
function.Utility.CharacterToint     = Utility CharacterToint int CharacterToint(Character)
function.Utility.CharacterTolong    = Utility CharacterTolong long CharacterTolong(Character)
function.Utility.CharacterTofloat   = Utility CharacterTofloat float CharacterTofloat(Character)
function.Utility.CharacterTodouble  = Utility CharacterTodouble double CharacterTodouble(Character)
function.Utility.intToboolean       = Utility intToboolean boolean intToboolean(int)
function.Utility.IntegerToboolean   = Utility IntegerToboolean boolean IntegerToboolean(Integer)
function.Utility.IntegerTochar      = Utility IntegerTochar char IntegerTochar(Integer)
function.Utility.longToboolean      = Utility longToboolean boolean longToboolean(long)
function.Utility.LongToboolean      = Utility LongToboolean boolean LongToboolean(Long)
function.Utility.LongTochar         = Utility LongTochar char LongTochar(Long)
function.Utility.floatToboolean     = Utility floatToboolean boolean floatToboolean(float)
function.Utility.FloatToboolean     = Utility FloatToboolean boolean FloatToboolean(Float)
function.Utility.FloatTochar        = Utility FloatTochar char FloatTochar(Float)
function.Utility.doubleToboolean    = Utility doubleToboolean boolean doubleToboolean(double)
function.Utility.DoubleToboolean    = Utility DoubleToboolean boolean DoubleToboolean(Double)
function.Utility.DoubleTochar       = Utility DoubleTochar char DoubleTochar(Double)

constructor.Boolean.fromboolean = Boolean fromboolean (boolean)
constructor.Boolean.fromString  = Boolean fromString (String)
function.Boolean.valueOf        = Boolean valueOf Boolean valueOf(boolean)
method.Boolean.booleanValue     = Boolean booleanValue boolean booleanValue()

constructor.Byte.frombyte   = Byte frombyte (byte)
constructor.Byte.fromString = Byte fromString (String)
function.Byte.valueOf       = Byte valueOf Byte valueOf(byte)
static.Byte.MIN_VALUE       = Byte MIN_VALUE byte MIN_VALUE
static.Byte.MAX_VALUE       = Byte MAX_VALUE byte MAX_VALUE

constructor.Short.fromshort  = Short fromshort (short)
constructor.Short.fromString = Short fromString (String)
function.Short.valueOf       = Short valueOf Short valueOf(short)
static.Short.MIN_VALUE       = Short MIN_VALUE short MIN_VALUE
static.Short.MAX_VALUE       = Short MAX_VALUE short MAX_VALUE

constructor.Character.fromchar = Character fromchar (char)
function.Character.valueOf     = Character valueOf Character valueOf(char)
method.Character.charValue     = Character charValue char charValue()
static.Character.MIN_VALUE     = Character MIN_VALUE char MIN_VALUE
static.Character.MAX_VALUE     = Character MAX_VALUE char MAX_VALUE

constructor.Integer.fromint    = Integer fromint (int)
constructor.Integer.fromString = Integer fromString (String)
function.Integer.valueOf       = Integer valueOf Integer valueOf(int)
static.Integer.MIN_VALUE       = Integer MIN_VALUE int MIN_VALUE
static.Integer.MAX_VALUE       = Integer MAX_VALUE int MAX_VALUE

constructor.Long.fromlong   = Long fromlong (long)
constructor.Long.fromString = Long fromString (String)
function.Long.valueOf       = Long valueOf Long valueOf(long)
static.Long.MIN_VALUE       = Long MIN_VALUE long MIN_VALUE
static.Long.MAX_VALUE       = Long MAX_VALUE long MAX_VALUE

constructor.Float.fromfloat  = Float fromfloat (float)
constructor.Float.fromString = Float fromString (String)
function.Float.valueOf       = Float valueOf Float valueOf(float)
static.Float.MIN_VALUE       = Float MIN_VALUE float MIN_VALUE
static.Float.MAX_VALUE       = Float MAX_VALUE float MAX_VALUE

constructor.Double.fromdouble = Double fromdouble (double)
constructor.Double.fromString = Double fromString (String)
function.Double.valueOf       = Double valueOf Double valueOf(double)
static.Double.MIN_VALUE       = Double MIN_VALUE double MIN_VALUE
static.Double.MAX_VALUE       = Double MAX_VALUE double MAX_VALUE

method.List.addLast = List addLast boolean add(Object)
method.List.add     = List add void add(int, Object)
method.List.get     = List get Object get(int)
method.List.remove  = List remove Object remove(int)
method.List.size    = List size int size()
method.List.isEmpty = List isEmpty boolean isEmpty()

constructor.ArrayList.new = ArrayList new ()

method.Map.put     = Map put Object put(Object, Object)
method.Map.get     = Map get Object get(Object)
method.Map.remove  = Map remove Object remove(Object)
method.Map.size    = Map size int size()
method.Map.isEmpty = Map isEmpty boolean isEmpty()

constructor.HashMap.new = HashMap new ()

method.StringMap.put     = StringMap put Object put(Object^String, Object)
method.StringMap.get     = StringMap get Object get(Object^String)
method.StringMap.remove  = StringMap remove Object remove(Object^String)
method.StringMap.size    = StringMap size int size()
method.StringMap.isEmpty = StringMap isEmpty boolean isEmpty()

constructor.StringHashMap.new = StringHashMap new ()

copy.CharSequence = CharSequence Object

copy.String = String CharSequence Object
copy.StringMap = StringMap Object
copy.Executable = Executable Object

copy.Number = Number Object

copy.Boolean = Boolean Object
copy.Byte = Byte Number Object
copy.Short = Short Number Object
copy.Character = Character Object
copy.Integer = Integer Number Object
copy.Long = Long Number Object
copy.Float = Float Number Object
copy.Double = Double Number Object

copy.List = List Object
copy.ArrayList = ArrayList List Object
copy.Map = Map Object
copy.HashMap = HashMap Map Object
copy.StringHashMap = StringHashMap StringMap Object

numeric.byte.short   = byte short
numeric.byte.int     = byte int
numeric.byte.long    = byte long
numeric.byte.float   = byte float
numeric.byte.double  = byte double
numeric.short.int    = short int
numeric.short.long   = short long
numeric.short.float  = short float
numeric.short.double = short double
numeric.char.int     = char int
numeric.char.long    = char long
numeric.char.float   = char float
numeric.char.double  = char double
numeric.int.long     = int long
numeric.int.float    = int float
numeric.int.double   = int double
numeric.long.float   = long float
numeric.long.double  = long double
numeric.float.double = float double

transform.boolean.byte    = explicit boolean byte Utility function booleanTobyte
transform.boolean.short   = explicit boolean short Utility function booleanToshort
transform.boolean.char    = explicit boolean char Utility function booleanTochar
transform.boolean.int     = explicit boolean int Utility function booleanToint
transform.boolean.long    = explicit boolean long Utility function booleanTolong
transform.boolean.float   = explicit boolean float Utility function booleanTofloat
transform.boolean.double  = explicit boolean double Utility function booleanTodouble
transform.boolean.Object  = implicit boolean Object Boolean function valueOf
transform.boolean.Number  = explicit boolean Number Utility function booleanToInteger
transform.boolean.Boolean = implicit boolean Boolean Boolean function valueOf

transform.byte.boolean = explicit byte boolean Utility function byteToboolean
transform.byte.Object  = implicit byte Object Byte function valueOf
transform.byte.Number  = implicit byte Number Byte function valueOf
transform.byte.Byte    = implicit byte Byte Byte function valueOf

transform.short.boolean = explicit short boolean Utility function shortToboolean
transform.short.Object  = implicit short Object Short function valueOf
transform.short.Number  = implicit short Number Short function valueOf
transform.short.Short   = implicit short Short Short function valueOf

transform.char.boolean   = explicit char boolean Utility function charToboolean
transform.char.Object    = implicit char Object Character function valueOf
transform.char.Number    = implicit char Number Utility function charToInteger
transform.char.Character = implicit char Character Character function valueOf

transform.int.boolean = explicit int boolean Utility function intToboolean
transform.int.Object  = implicit int Object Integer function valueOf
transform.int.Number  = implicit int Number Integer function valueOf
transform.int.Integer = implicit int Integer Integer function valueOf

transform.long.boolean = explicit long boolean Utility function longToboolean
transform.long.Object  = implicit long Object Long function valueOf
transform.long.Number  = implicit long Number Long function valueOf
transform.long.Long    = implicit long Long Long function valueOf

transform.float.boolean = explicit float boolean Utility function floatToboolean
transform.float.Object  = implicit float Object Float function valueOf
transform.float.Number  = implicit float Number Float function valueOf
transform.float.Float   = implicit float Float Float function valueOf

transform.double.boolean = explicit double boolean Utility function doubleToboolean
transform.double.Object  = implicit double Object Double function valueOf
transform.double.Number  = implicit double Number Double function valueOf
transform.double.Double  = implicit double Double Double function valueOf

transform.Object.boolean = explicit Object boolean Boolean method booleanValue
transform.Object.byte    = explicit Object byte Number method byteValue
transform.Object.short   = explicit Object short Number method shortValue
transform.Object.char    = explicit Object char Character method charValue
transform.Object.int     = explicit Object int Number method intValue
transform.Object.long    = explicit Object long Number method longValue
transform.Object.float   = explicit Object float Number method floatValue
transform.Object.double  = explicit Object double Number method doubleValue

transform.Number.boolean = explicit Number boolean Utility function NumberToboolean
transform.Number.byte    = explicit Number byte Number method byteValue
transform.Number.short   = explicit Number short Number method shortValue
transform.Number.char    = explicit Number char Utility function NumberTochar
transform.Number.int     = explicit Number int Number method intValue
transform.Number.long    = explicit Number long Number method longValue
transform.Number.float   = explicit Number float Number method floatValue
transform.Number.double  = explicit Number double Number method doubleValue

transform.Boolean.boolean = implicit Boolean boolean Boolean method booleanValue
transform.Boolean.byte    = explicit Boolean byte Utility function BooleanTobyte
transform.Boolean.short   = explicit Boolean short Utility function BooleanToshort
transform.Boolean.char    = explicit Boolean char Utility function BooleanTochar
transform.Boolean.int     = explicit Boolean int Utility function BooleanToint
transform.Boolean.long    = explicit Boolean long Utility function BooleanTolong
transform.Boolean.float   = explicit Boolean float Utility function BooleanTofloat
transform.Boolean.double  = explicit Boolean double Utility function BooleanTodouble

transform.Byte.boolean = explicit Byte boolean Utility function ByteToboolean
transform.Byte.byte    = implicit Byte byte Number method byteValue
transform.Byte.short   = implicit Byte short Number method shortValue
transform.Byte.char    = explicit Byte char Utility function ByteTochar
transform.Byte.int     = implicit Byte int Number method intValue
transform.Byte.long    = implicit Byte long Number method longValue
transform.Byte.float   = implicit Byte float Number method floatValue
transform.Byte.double  = implicit Byte double Number method doubleValue

transform.Short.boolean = explicit Short boolean Utility function ShortToboolean
transform.Short.byte    = explicit Short byte Number method byteValue
transform.Short.short   = implicit Short short Number method shortValue
transform.Short.char    = explicit Short char Utility function ShortTochar
transform.Short.int     = implicit Short int Number method intValue
transform.Short.long    = implicit Short long Number method longValue
transform.Short.float   = implicit Short float Number method floatValue
transform.Short.double  = implicit Short double Number method doubleValue

transform.Character.boolean = explicit Character boolean Utility function CharacterToboolean
transform.Character.byte    = explicit Character byte Utility function CharacterTobyte
transform.Character.short   = explicit Character short Utility function CharacterToshort
transform.Character.char    = implicit Character char Character method charValue
transform.Character.int     = implicit Character int Utility function CharacterToint
transform.Character.long    = implicit Character long Utility function CharacterTolong
transform.Character.float   = implicit Character float Utility function CharacterTofloat
transform.Character.double  = implicit Character double Utility function CharacterTodouble

transform.Integer.boolean = explicit Integer boolean Utility function IntegerToboolean
transform.Integer.byte    = explicit Integer byte Number method byteValue
transform.Integer.short   = explicit Integer short Number method shortValue
transform.Integer.char    = explicit Integer char Utility function IntegerTochar
transform.Integer.int     = implicit Integer int Number method intValue
transform.Integer.long    = implicit Integer long Number method longValue
transform.Integer.float   = implicit Integer float Number method floatValue
transform.Integer.double  = implicit Integer double Number method doubleValue

transform.Long.boolean = explicit Long boolean Utility function LongToboolean
transform.Long.byte    = explicit Long byte Number method byteValue
transform.Long.short   = explicit Long short Number method shortValue
transform.Long.char    = explicit Long char Utility function LongTochar
transform.Long.int     = explicit Long int Number method intValue
transform.Long.long    = implicit Long long Number method longValue
transform.Long.float   = implicit Long float Number method floatValue
transform.Long.double  = implicit Long double Number method doubleValue

transform.Float.boolean = explicit Float boolean Utility function FloatToboolean
transform.Float.byte    = explicit Float byte Number method byteValue
transform.Float.short   = explicit Float short Number method shortValue
transform.Float.char    = explicit Float char Utility function FloatTochar
transform.Float.int     = explicit Float int Number method intValue
transform.Float.long    = explicit Float long Number method longValue
transform.Float.float   = implicit Float float Number method floatValue
transform.Float.double  = implicit Float double Number method doubleValue

transform.Double.boolean = explicit Double boolean Utility function DoubleToboolean
transform.Double.byte    = explicit Double byte Number method byteValue
transform.Double.short   = explicit Double short Number method shortValue
transform.Double.char    = explicit Double char Utility function DoubleTochar
transform.Double.int     = explicit Double int Number method intValue
transform.Double.long    = explicit Double long Number method longValue
transform.Double.float   = explicit Double float Number method floatValue
transform.Double.double  = implicit Double double Number method doubleValue
